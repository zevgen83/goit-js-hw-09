{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SA2BA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GACjBC,YAAW,WACGC,KAAKC,SAAW,GAEpCJ,EAAQ,CAACH,WAAUC,UAEnBG,EAAO,CAACJ,WAAUC,S,GAEnBA,E,KAhCM,CACXO,UAAWC,SAASC,cAAc,UAG/BF,UAAUG,iBAAiB,UAEhC,SAAuBC,GACrBA,EAAEC,iBAGF,IAFA,IAAgCC,EAAAF,EAAEG,OAAOC,SAAjCC,EAAwBH,EAAxBb,MAAOiB,EAAiBJ,EAAjBI,KAAMC,EAAWL,EAAXK,OACjBC,EAAcC,OAAOJ,EAAMK,OACtBC,EAAI,EAAGA,GAAKJ,EAAOG,MAAOC,GAAK,EACtCxB,EAAcwB,EAAGH,GAChBI,MAAK,SAAAC,G,IAAGzB,EAAQyB,EAARzB,SAAUC,EAAKwB,EAALxB,MACjByB,EAAA7B,GAAS8B,OAAOC,QAAQ,qBAAoCC,OAAf7B,EAAS,QAAY6B,OAAN5B,EAAM,M,IAEnE6B,OAAM,SAAAL,G,IAAGzB,EAAQyB,EAARzB,SAAUC,EAAKwB,EAALxB,MAClByB,EAAA7B,GAAS8B,OAAOI,QAAQ,oBAAmCF,OAAf7B,EAAS,QAAY6B,OAAN5B,EAAM,M,IAEnEmB,GAAeC,OAAOH,EAAKI,OAE7BV,EAAEoB,cAAcC,O","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nlet timerId = null;\n\nconst refs = {\n  formInput: document.querySelector('form'),\n}\n\nrefs.formInput.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit (e) {\n  e.preventDefault(); \n  const { delay, step, amount } = e.target.elements;\n  let delayNumber = Number(delay.value);  \n  for (let i = 1; i <= amount.value; i += 1) {\n    createPromise(i, delayNumber)\n    .then(({ position, delay }) => {\n      Notiflix.Notify.success(`Fulfilled promise ${position} in ${delay}ms`);      \n    })\n    .catch(({ position, delay }) => {\n      Notiflix.Notify.failure(`Rejected promise ${position} in ${delay}ms`);      \n    });    \n    delayNumber += Number(step.value);\n  }\n  e.currentTarget.reset();\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    timerId = setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({position, delay});\n      } else {\n        reject({position, delay});\n      }\n    }, delay);    \n  })\n  \n}\n"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","formInput","document","querySelector","addEventListener","e","preventDefault","_elements","target","elements","delay1","step","amount","delayNumber","Number","value","i","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure","currentTarget","reset"],"version":3,"file":"03-promises.b800413d.js.map"}